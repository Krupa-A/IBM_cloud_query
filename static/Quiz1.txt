
Name:Krupa Asodariya
Last 4 digits ID: 3036

CSE 6331, Cloud Computing					


Quiz Q1, 1.00, Summer 2 2020   (c) DL, UTA, 2020


  C&P means cut and paste only those relevant lines from your program(s) into this quiz.


 1.  I understand that I am on my honor during this quiz, I will not collaborate, use 
     non-allowed sources, and I will not discuss or share this quiz with anyone for the next 
     12 hours.
     You MAY: use Google to search, use previous source code, 
     YOU MAY NOT use:
     Email, Facebook, Hangouts, IM, chats, Skype or ANY other human connection.

     ANY VIOLATIONS to scholastic honesty, which include working with others during this quiz, communicating with others during
     this quiz, giving anyone or recieving from anyone any information during this quiz or for the next 6 hours after completion
     of this quiz is a honors violation and will result in a -100 points being assessed for this quiz and being reported. 

     This is a timed test. Late tests will have points deducted for being late.
     Very late tests will not be graded.

     When you are complete, with any part, please send the link, raise your hand, so we may visually inspect that part.

     The second part of the test, you should electronically submit, you will need to copy and paste 
     only those lines of code to implement that part of the test, usually a few (two to eight) lines of code. 
     Place it immediately after the question.

     Submit this Quiz (renamed) with code cut and pasted, ONLY text. DO NOT submit zips, binaries, libraries,
     or anything other than text.

     When any parts(questions) are complete complete, submit this test, you may make multiple submissions.

     If you have computer, or other, problems, please raise your hand immediately.

     If you understand and agree, please initial here:
     _________________

 2. Get files from this same folder.
   
 3. Name your program/submission with your name and last digits of your ID.

 4a. Using the cloud services provider, all functionality possible should be implemented on that provider.
     (Of course, displaying web pages through a browser and the user interface is "local")

 4b. Upload all data files (*jpg or *png and *csv, not this quiz) to cloud service. 
  
Show and submit code, when each part is complete, raise your hand and then show us:

 To recieve credit you MUST show (demo) AND submit the code (text only) on Canvas.

 5. Show a web page and interface (which resides on the cloud provider) with your 
    Student ID at the top and below that, your name, at the top of every web page dispayed 
    (for this quiz). Please use a large font.
    For this part (question), below that please show any one of the pictures provided.
    The cloud service provider is IBM Cloud (BlueMix).

@app.route('/Question5',methods=['GET','POST'])
def Question5():
	form = NameForm()
	return render_template('Question 5.html',form=fo

 6. Through a web interface (page), allow user to give a picture name (file name) and you show the picture name (file name)
    and the corresponding picture (or show "no picture available"), then below that the price and the description.

@app.route('/Question6',methods=['GET','POST'])
def Question6():
	form = NameFormnamesearch()
	if form.validate_on_submit():
		pname=form.pname.data
		images=df[df.Picture == pname].Picture.values
		price=df[df.Picture == pname].Price.values
		description=df[df.Picture == pname].Description.values
		return render_template('Question 6.html',form=form,pname=pname,image=images,price=price,description=description )
	return render_template('index.html',form=form,name=None)

 7. (Web Page) allow a user to give a range of prices (low to high) and you show the corresponding picture, and description. 

@app.route('/Question7',methods=['GET','POST'])
def Question7():
	form = PriceForm()
	if form.validate_on_submit():
		price = form.price.data
		price1= form.price.data
		images = df[price1< df.Price < price].Picture.values
		description=df[price1 < df.Price < price].Description.values
		return render_template('Question 7.html',form=form,image=images,description=description)
	return render_template('index.html',form=form,name=None)


 8. (Web page) allow a user to give a food name then modify the description, then after the description is modified,
     you display the corresponding name, picture, and description.

@app.route('/Question8',methods=['GET','POST'])
def Question8():
	form = NameFormupdatecaption()
	if form.validate_on_submit():
		name = form.foodname.data
		image = df[df.Food==name].Picture.values
		new_description = form.new_description.data
		prev_description = df[df.Food==name].Description.values
		df.at[df.Food==name, 'Description'] = new_description 
		df.to_csv('static/food.csv', index=False) 
		return render_template('Question 8.html',form=form,name= name,image = image,new_description=new_description,prev_description=prev_description)
	return render_template('index.html',form=form,name=None)


 9. Allow a user to replace (with an already existing one) or remove a picture given the name.

 10. Show us, in a link, the application running and we will try it out. Only for parts 5, 6, 7, 8, 9

 10b. When complete, return (send) this quiz
     If you finish early, send this immediately, otherwise send between
     the end of class and no more than 1 minute after that.

